// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

import "forge-std/Test.sol";
import "../src/VulnerableContract.sol";

contract TimestampExploitTest is Test {
    VulnerableContract vulnerable;

    function setUp() public {
        vulnerable = new VulnerableContract();
    }

    function testTimestampManipulation() public {
        // Set block.timestamp to an even number
        vm.warp(1000000000); // Set timestamp to a fixed value (even)

        bool isWinner = vulnerable.isLuckyWinner();
        assertTrue(isWinner, "Exploit failed: should always win with even timestamp");

        // Set block.timestamp to an odd number
        vm.warp(1000000001); // Change timestamp to an odd number

        bool isNotWinner = vulnerable.isLuckyWinner();
        assertFalse(isNotWinner, "Exploit failed: should always lose with odd timestamp");
    }
}
